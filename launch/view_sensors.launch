<launch>
    <param name="use_sim_time" value="true"/>
    <arg name="pi"   value="3.141592654"/>

    <arg name="launch_static_tf"       default="true"/>
    <arg name="sec"                    default="10"/>
    <arg name="rate"                   default="1"/>
    <arg name="bag_name"               default="2020-12-01-12-04-38_odom_gt.bag"/>
    <arg name="bag_file"               default="$(env HOME)/radar_fusion_bags/$(arg bag_name)"/>
    <arg name="use_tf_bag" default="false" />
    
    <node name="bag_player" type="play" pkg="rosbag" 
          args="$(arg bag_file) -r $(arg rate) --clock -s $(arg sec) --quiet " 
          output="screen"  required="true">
        <remap from="tf" to="tf_useless" unless="$(arg use_tf_bag)"/>
    </node>

    <!-- <node name="odom_to_tf" type="odom_to_tf.py" pkg="odom_to_tf" unless="$(arg use_tf_bag)"/> -->
    <node pkg="idmind_navigation" type="odometry_node.py" name="odometry_node_ticks" unless="$(arg use_tf_bag)">
        <param name="/bot/base_width" value="0.65"/>
    </node>

    <!-- Depending on the localization method, start fusion or just remap scans-->
    <arg name="localization_method" default="fusion"/>
    
    <!-- Fusion -->

    <node name="dbscan_fuser" pkg="radar_experiments" type="lidar_radar_dbscan" output="screen" >
        <param name="use_dbscan_lines" value="true"/>
        <param name="yaw_tolerance" value="0.13"/>
    </node>

    <!-- Radar -->
    <include file="$(dirname)/concatenator.launch"/> 
    <arg name="max_height" default="0.2"/>
    <arg name="min_height" default="-0.1"/>
    <arg name="angle_increment" default="0.01"/>
    <node pkg="pointcloud_to_laserscan" type="pointcloud_to_laserscan_node" name="pointcloud_to_laserscan_radar">
        <remap from="cloud_in"            to="/radarConcatenatedCloud"/>
        <remap from="scan"                to="/radar_scan"/>
        <param name="min_height"          value="$(arg min_height)"/>
        <param name="max_height"          value="$(arg max_height)"/>
        <param name="angle_min"           value="$(eval -1*arg('pi'))"/>
        <param name="angle_max"           value="$(eval arg('pi'))"/>
        <param name="angle_increment"     value="$(arg angle_increment)"/>
        <param name="queue_size"          value="1"/>
        <param name="scan_time"           value="0.1"/>
        <param name="range_min"           value="0.5"/>
        <param name="range_max"           value="120"/>
        <param name="target_frame"        value="os1_lidar"/>
        <param name="transform_tolerance" value="0.5"/>
    </node>

    <!-- Lidar -->
    <arg name="scan_topic" default="/lidar_scan" if="$(eval localization_method=='lidar')"/>
    <node pkg="pointcloud_to_laserscan" type="pointcloud_to_laserscan_node" name="pointcloud_to_laserscan_lidar" >
        <remap from="cloud_in"            to="/os1_cloud_node/points_non_dense"/>
        <remap from="scan"                to="/lidar_scan"/>
        <param name="min_height"          value="$(arg min_height)"/>
        <param name="max_height"          value="$(arg max_height)"/>
        <param name="angle_min"           value="$(eval -1*arg('pi'))"/>
        <param name="angle_max"           value="$(eval arg('pi'))"/>
        <param name="angle_increment"     value="$(arg angle_increment)"/>
        <param name="queue_size"          value="1"/>
        <param name="scan_time"           value="0.1"/>
        <param name="range_min"           value="0.5"/>
        <param name="range_max"           value="120"/>
        <param name="target_frame"        value="os1_lidar"/>
        <param name="transform_tolerance" value="0.5"/>
    </node>

    <!-- MCL 2D Stuff & Map server -->
    <arg name="map2d_name"     default="tunel2d_map4"/>
    <node pkg="map_server" name="map_server" type="map_server" args="$(find radar_experiments)/maps/$(arg map2d_name).yaml"/>
    <!-- MCL2D initial position -->
    <arg name="initial_pose_x"  default="6.3"/>
    <arg name="initial_pose_y"  default="4.6"/>
    <arg name="initial_pose_a"  default="1.56"/>

    <arg name="use_dll" default="false"/>

     <node name="dll2d_node" type="dll2d_node" pkg="dll2d" output="screen" if ="$(arg use_dll)">
    <remap from="/dll2d_node/initial_pose" to="/initialpose"/>
    
    <param name="in_scan" value="$(arg scan_topic)" />
    <param name="base_frame_id" value="base_link" />
    <param name="odom_frame_id" value="odom" />
    <param name="map_frame_id" value="map" />
    <param name="update_rate" value="20.0" /> 
    <param name="update_min_d" value="0.05" />
    <param name="update_min_a" value="0.01" />
    <param name="update_min_t" value="1.0" />
    <param name="initial_x"            value="$(arg initial_pose_x)"/>
      <param name="initial_y"            value="$(arg initial_pose_y)"/>
      <param name="initial_a"            value="$(arg initial_pose_a)"/>
    
  </node>

    <node pkg="upo_markers" type="marker_node" name="raposa_marker">
        <remap from="/raposa/marker"    to="/raposa_marker"/>
    </node>

    <node name="rviz_fusion" pkg="rviz" type="rviz" args="-d $(find radar_experiments)/rviz/fusion.rviz"/>
    <node name="rviz_lidar" pkg="rviz" type="rviz" args="-d $(find radar_experiments)/rviz/lidar.rviz"/>
    <node name="rviz_radar" pkg="rviz" type="rviz" args="-d $(find radar_experiments)/rviz/radar.rviz"/>

    <!-- Static TFs -->
    <include file="$(find radar_experiments)/launch/frames.launch" if="$(arg launch_static_tf)"/>

</launch>